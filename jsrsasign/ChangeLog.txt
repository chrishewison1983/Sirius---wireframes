
ChangeLog for jsrsasign

* Changes from 8.0.11 to 8.0.12 (2018-Apr-22)
  - base64x 1.1.13 to 1.1.14
    - function iptohex added
    - fix hextoipv6 for wrong "::" shrinking
  - asn1x509 1.1.5 to 1.1.6
    - KeyUsage class now supports names parameter such as
      ['digitalSignature', 'nonRepudiation'].
    - some refactoring
  - tool/tool_ca2.html added for
    yet another certificate generation tool by.
  - testcase added for above methods/functions
    - qunit-do-base64x.html
    - qunit-do-asn1x509.html

* Changes from 8.0.10 to 8.0.11 (2018-Apr-17)
  - asn1x509 1.1.4 to 1.1.5
    - X500Name.setByString fix for attribute value with slash.
  - testcase added to confirm above fixes.
    - qunit-do-asn1x509.html

* Changes from 8.0.9 to 8.0.10 (2018-Apr-09)
  - IPv6 address support in certificate
  - LICENSE.txt
    - conclude third party licenses.
  - asn1x509 1.1.3 to 1.1.4
    - IPv4/v6 iPAddress support in GeneralName
  - base64x 1.1.2 to 1.1.3
    - ipv6tohex, hextoipv6 and hextoip functions
      added for IPv6 string conversion.
  - x509 1.1.19 to 1.1.20
    - add IPAddress support in getExtSubjectAltName2
  - testcase added for above methods/functions
    - qunit-do-asn1x509.html
    - qunit-do-base64x.html
    - qunit-do-x509-ext.html
  - tool/tool_ca.html
    - use SHA256withRSA and RSA 2048bit key
      by default.
    - add IPAddress support in subjectAltName

* Changes from 8.0.8 to 8.0.9 (2018-Apr-04)
  - critical bug fix for ASN.1 string class.
    When UTF-8 string is set to ASN.1 object,
    string has been garbled.
  - src/asn1 1.0.13 to 1.0.14
    - DERAbstractString.setString fixed for utf8.
  - src/asn1 1.1.2 to 1.1.3
    - following OIDs are added:
      T/title (2.5.4.12)
      description (2.5.4.13)
      organizationIdentifier (2.5.4.97)

* Changes from 8.0.7 to 8.0.8 (2018-Apr-02)
  - src/asn1x509 1.1.1 to 1.1.2
    - GeneralName fix for dn and ldapdn of explicit.
      This have caused wrong GeneralName dn/ldapdn ASN.1
      encoding.
    - CRL.sign fix for init
  - tool/tool_ca.html
    - subjectAltName extension support added.
    - subjectPublicKeyInfo setting fix.
  - test/qunit-do-asn1x509
    - fix for CRL and GeneralName dn/ldapdn test
  - npm/test/t_sig_rsasha1.js added

* Changes from 8.0.6 to 8.0.7 (2018-Mar-25)
  - src/jws 3.3.10 to 3.3.11
    - verify method returns false in case of
      without all of head, payload and signature
      to fix issue #332.
  - src/jwsjs 2.2.0 to 2.2.1
    - readJWSJS fix for wrong initialization as #336
  - src/asn1x509 1.1.0 to 1.1.1
    - add DN uniqueIdentifier(2.5.4.45) and
      description(2.5.4.13) attribute type by PR #335.
  - ext/{rsa,rsa2}
    - OAEP fix by PR #303.

* Changes from 8.0.5 to 8.0.6 (2018-Feb-10)
  - src/x509 1.1.18 to 1.1.19
    - fix getSubjectAltName for IP addr of PR #317
  - test/qunit-do-x509-ext
    - add test getSubjectAltName for DNS and IP
  - src/rsa, rsa2
    - fix for alert function for issue #325
  - src/ecdsa-modified
    - fix asn1SigToConcatSig for issue #315
  - npm/lib
    - jsrsasign-{all,jwths,rsa}-min.js are added
      per requested issue #314, #313

* Changes from 8.0.4 to 8.0.5 (2018-Jan-27)
  - tool/tool_asn1dumper.html
    - #304 pemtohex issue fix
  - tool/tool_roca.html added to check ROCA vulnerablity for public key
  - src/asn1csr 1.0.6 to 1.0.7
    - fix init of fix #308
  - src/jws 3.3.10
    - fix aud verification in vertifyJWT document #318

* Changes from 8.0.3 to 8.0.4 (2017-Sep-15)
  - asn1cms 1.0.4 to 1.0.5
    - add KJUR.asn1.cms.CMSUtil.verifySignedData method to
      verify CMS signed data.
  - crypto 1.2.0 to 1.2.1
    - small refactoring
  - x509 1.1.17 to 1.1.18
    - fix getInfo() to support no extension.
  - add sample_node/cmssign
  - fix sample/sample-ecdsa.html in sig.init.
  - fix sample_node/asn1extract in ASN1HEX method call
  - merge PR #292 for https
  - merge PR #283 to fix document and example
  - merge PR #281 to fix JWK Thumbprint RFC number

* Changes from 8.0.2 to 8.0.3 (2017-Jul-11)
  - jws 3.3.9 to 3.3.10
    - fix JWS.verify fail for #276

* Changes from 8.0.1 to 8.0.2 (2017-Jul-08)
  - jws 3.3.8 to 3.3.9
    - fix for jsrsasign-jwths-min.js
  - sample/sample-rsasign.html fix for #274.
  - test qunit-do-package-rsa.html fix

* Changes from 8.0.0 to 8.0.1 (2017-Ju1-01)
  - x509 1.1.16 to 1.1.17
    - add getExtSubjectAltName2 which supports
      GeneralName type
    - make getExtSubjectAltName deprecated
    - fix getExtCRLDistributionPointsURI() for #269.
      caused error if CDP containts directory name.
      now fixed.
    - getInfo now supports certificatePolicies
  - tool/tool_certview.html
    - SHA1 fingerprint issue fixed for #273

* Changes from 7.2.2 to 8.0.0 (2017-Jun-30)
  - all of deprecated classes, methods and files are
    removed.
    - get smaller all-min.js than before.
    - following files are refactored:
    - asn1hex, asn1x509, crypto, jwsjs, keyutil,
      rsapem, rsasign, x509.
  - npm/lib/footer.js fix for issue #270.

* Changes from 7.2.1 to 7.2.2 (2017-Jun-23)
  - jws 3.3.7 to 3.3.8
    - merge pull request #266
  - x509 1.1.15 to 1.1.16
    - read X.509v3 certificate without any extension
      supported in readCertHex.
  - ext/yahoo.js
    - remove most of codes and keep YAHOO.lang.extend only.
      So all of Yahoo YUI vulnerabilities are removed.

* Changes from 7.2.0 to 7.2.1 (2017-Jun-04)
  - base64x 1.1.11 to 1.1.12
    - function hextopem, pemtohex added
  - asn1hex 1.1.11 to 1.1.12
    - make ASN1HEX.pemToHex deprecated
  - asn1 1.0.12 to 1.0.13
    - make KJUR.asn1.ASN1Util.getPEMStringFromHex deprecated
  - rsapem 1.2.1 to 1.2.2
    - make RSAKey.pemToBase64 deprecated
  - x509 1.1.14 to 1.1.15
    - make X509.pemToBase64 deprecated
  - further refactoring. reducing min.js size by refactoring
    - asn1 1.0.12 to 1.0.13
    - asn1cades 1.0.2 to 1.0.3
    - asn1cms 1.0.3 to 1.0.4
    - asn1csr 1.0.4 to 1.0.5
    - asn1ocsp 1.0.2 to 1.0.3
    - asn1tsp 1.0.2 to 1.0.3
    - asn1x509 1.0.23 to 1.0.24
    - jws 3.3.6 to 3.3.7
    - jwsjs 2.1.0 to 2.1.1
    - keyutil 1.1.1 to 1.1.2
    - pkcs5pkey 1.1.1 to 1.1.2
    - x509 1.1.14 to 1.1.15

* Changes from 7.1.4 to 7.2.0 (2017-May-21)
  - major refactoring before reducing file size
  - major refactoring for ASN1HEX
    - asn1hex 1.1.10 to 1.1.11
      - make most of long method name deprecated and
        provide new short names.
      - DEPRECATED: getHexOf{TLV/V/L}_AtObj
                    getIntOfL}_AtObj
                    get{StartPosOfV/ByteLengthOfL}_AtObj
      - NEW: get{TLV/V/Vlen/Vidx/L/Lblen}
             getChildIdx, getTLVbyList, oidname
    - asn1cades 1.0.1 to 1.0.2
    - asn1csr 1.0.3 to 1.0.4
    - asn1tsp 1.0.1 to 1.0.2
    - ecdsa-modified 1.1.0 to 1.1.1
    - keyutil 1.1.0 to 1.1.1
    - pkcs5key 1.1.0 to 1.1.1
    - rsapem 1.2.0 to 1.2.1
  - major refactoring for X509
    - x509 1.1.13 to 1.1.14
    - make most of static method deprecated and
      new non-static methods are defined.
    - parseExt/getExtInfo method added
  - base64x 1.0.10 to 1.0.11
    - datetozulu added
  - sample/sample*.html tool/tool*.html test/qunit*.html link fixed
  - npm jsrsasign@7.1.4 had wrong reference in navigator.
    So jsrsasign@7.1.4 has been unpublished.
  - ext/rng.js
    - msCrypto fallback for IE11 to prevent error 
      when calling window.crypto. (pull/254)
      Thanks @mike-w-kelly.
  - dsa 2.1.0 to 2.1.1
    - verifyWithMessageHash infinite loop bug
      fix #238. Thanks @nemesv.

* Changes from 7.1.3 to 7.1.4 (2017-May-06)
  - all source codes are moved to src directory
  - x509 1.1.12 to 1.1.13
    - refactoring codes
    - X509v1 certificate support in all methods
    - new methods and properties for X509 class
      - readCertHex
      - getVersion
      - getPublicKey
      - getPublicKeyHex
      - getPublicKeyIdx
      - version property
      - foffset property
    - make following methods and properties deprecated in X509 class
      - readCertPEMWithoutRSAInit
      - getSubjectPublicKeyPosFromCertHex
      - getSubjectPublicKeyInfoPosFromCertHex
      - getPublicKeyInfoPosOfCertHEX
      - getSerialNumberHex static method
      - subjectPublicKeyRSA property
      - subjectPublicKeyRSA_hN property
      - subjectPublicKeyRSA_hE property
  - asn1hex 1.1.9 to 1.1.10
    - refactoring codes
    - new methods
      - getIdxbyList
      - getTLVbyList
    - make following methods deprecated
      - getDecendantIndexByNthList (> getIdxbyList)
  - asn1x509 1.0.22 to 1.0.23
    - serialNumber(2.5.4.5) parameter added OID attribute type
  - base64x 1.1.9 to 1.1.10
    - hextoposhex function added

* Changes from 7.1.2 to 7.1.3 (2017-Apr-15)
  - jsrsasign-latest-all-min.js was moved to
    jsrsasign-all-min.js in master. 
    In gh-page, both are provided for backword
    compatibity. 
  - base64x 1.1.8 to 1.1.9
    - zuluto{date,msec,int} are added
  - jws 3.3.5 to 3.3.6
    - modified IntDate.getZulu to use zulutosec;

* Changes from 7.1.1 to 7.1.2 (2017-Mar-20)
  - CRITICAL BUG FIX: KJUR.asn1.x509.AlgorithmIdentifier
    default was wrong in algorithm parameter field.
    For example "SHA1" AlgorithmIdentifier object
    will be missing algorithm parameter field by
    bug. This issue raised just only in 7.1.1 and
    the issue was fixed.
    - asn1x509 1.0.21 to 1.0.22
      - AlgorithmIdentifier bug fix

* Changes from 7.1.0 to 7.1.1 (2017-Mar-10)
  - CRITICAL BUG FIX: KJUR.asn1.x509.Certificate.sign() and
    KJUR.asn1.x509.X509Util.newCertPEM() have always 
    signed signatures with SHA1withRSA algorithm regardless
    of any specified signature algorithm. This issue was 
    fixed in this release.
  - asn1x509 1.0.19 to 1.0.20
    - Certificate
      - sign() critical bug fix
        sign() was always sign with SHA1withRSA regardless of
        specified any other signature algorithm.
        This fixes #240 and #241 by @helfloryd.
    - AlgorithmIdentifier
      - set algorithm parameter to NULL automatically by default 
        for "*withRSA" algorithm.
      - document update
    - newCertPEM
      - fix document
  - x509 1.1.11 to 1.1.12
    - X509.verifySignature static method added
  - ext/rng.js
    - fix #228 from @dzaman. window.crypto.random fix
  - crypto 1.1.11 to 1.1.12
    - minor document fix

* Changes from 7.0.0 to 7.1.0 (2017-Jan-21)
  - minor update for loading private/public key
    - support added: PKCS#5 DSA/ECC hexacedimal string of private key
  - keyutil 1.0.14 to 1.1.0
    - BUGFIX: KEYUTIL.getKey for PKCS#5 PEM ECC private key 
      was not set curve name properly and now it's fixed.
      (issue #227).
    - make KEYUTIL.getHexFromPEM deprecated
    - move from KEYUTIL.getHexFromPEM to ASN1HEX.pemToHex
  - pkcs5pkey 1.0.7 to 1.1.0
    - make PKCS5PKEY.getHexFromPEM deprecated
    - move from getHexFromPEM to ASN1HEX.pemToHex
  - rsapem 1.1.1 to 1.2.0
    - refactoring codes
    - readPKCS5PubKeyHex added
    - readPKCS8PubKeyHex added
    - readCertPubKeyHex added
  - ecdsa-modified 1.0.5 to 1.1.0
    - readCertPubKeyHex added
  - dsa 2.0.1 to 2.1.0
    - setPrivateHex, setPublicHex added
    - readPKCS5PrvKeyHex added
    - readPKCS8PrvKeyHex added
    - readPKCS8PubKeyHex added
    - readCertPubKeyHex added
  - asn1hex 1.1.8 to 1.1.9
    - ASN1HEX.pemToHex added
    - move from {KEYUTIL,PKCS5PRV}.getHexFromPEM, 
      X509.pemToHex to ASN1HEX.pemToHex
  - x509 1.1.10 to 1.1.11
    - now X509.pemToHex deprecated and is planed to 
      remove in jsrsasign 8.0.0.
  - asn1cades 1.0.0 to 1.0.1
    - move to ASN1HEX.pemToHex
  - asn1cms 1.0.2 to 1.0.3
    - move from KEYUTIL.getHexFromPEM to ASN1HEX.pemToHex
  - asn1csr 1.0.2 to 1.0.3
    - move from KEYUTIL.getHexFromPEM to ASN1HEX.pemToHex

* Changes from 6.2.3 to 7.0.0 (2016-Dec-26)
  - LGPL license for openpgpjs was removed.
  - asn1hex 1.1.7 to 1.1.8
    - ASN1HEX.dump also supports ASN1Object as argument
  - asn1x509
    - API document update
  - pkcs5pkey 1.0.7
    - merge @machinewu's pull request for API doc fix
  - dsa 2.0.0
    - some of my own codes are moved from dsa-modified-1.0.js 
      to dsa-2.0.0 and old openpgpjs codes are re-writed with
      my own codes and all of openpgpjs codes are removed from
      jsrsasign.
  - crypto 1.1.10 to 1.1.11
    - some static random number generator methods are
      added to KJUR.crypto.Util class for new dsa-2.0:
      getRandomHexOfNbytes, getRandomBigIntegerOfNbytes, 
      getRandomHexOfNbits, getRandomBigIntegerOfNbits, 
      getRandomBigIntegerZeroToMax, getRandomBigIntegerMinToMax
  - REMOVED
    - dsa-modified-1.0.js, ext/THIRDPARTY_LICENSE.pgp.txt
  - test/qunit-do-*.html
    - most of test codes are updated.

* Changes from 6.2.2 to 6.2.3 (2016-Nov-29)
  - asn1x509 1.0.18 to 1.0.19
    - GeneralName and GeneralNames class supports dn and ldapdn parameters
    - SubjectAltName and IssuerAltName extension added
    - Extension.appendByNameToArray method added
  - asn1csr 1.0.1 to 1.0.2
    - CertificationRequestInfo.appendExtensionByName method added
    - CertificationRequestInfo extensionRequest encoding critical bugfix
    - CSRUtil.newCSRPEM "ext" parameter for extensionRequest supported
  - sample_node
    - datasing and dataverify script added
  - base64x
    - API document update
  - asn1
    - API document update

* Changes from 6.2.1 to 6.2.2 (2016-Nov-19)
  - x509 1.1.9 to 1.1.10
    - X509 class
      - multi-valued RDN support in hex2dn and hex2rdn method.
      - optional string index argument added to hex2dn and hex2rdn method.
      - hex2attrTypeAndValue static method added
    - API document update
  - asn1x509 1.0.17 to 1.0.18
    - X500Name class
      - LDAP(RFC 2253) name support
      - setByLdapString method added
      - onelineToLDAP static method added
      - ldapToOneline static method added
      - 'ldapstr& constructor parameter is supported
      - more AttributeType name supported in atype2oidList
    - OID static class
      - oid2atype static method added
    - API document update
  - asn1 1.0.11 to 1.0.12
    - refactoring in DERObjectIdentifier
    - API document update

* Changes from 6.2.0 to 6.2.1 (2016-Nov-18)
  - asn1x509 1.0.16 to 1.0.17
    - multi-valued RDN supported in X500Name and RDN class.
      - KJUR.asn1.x509.RDN.parseString() static method added
      - API document update
  - x509 1.1.9 to 1.1.9 (same)
    - X509.readCertPEMWithoutRSAInit fix by @lionello . Thanks.
  - crypto 1.1.10 to 1.1.10
    - API document fix
  - sample_node scripts
    - dataencrypt, datadecrypt and jwsview added

* Changes from 6.1.4 to 6.2.0 (2016-Nov-03)
  - RSAKey
    - CRITICAL BUGFIX: RSA-PSS and RSA-OAEP not working from jsrsasign 5.0.0
      because rstr_sha1 function is missingand. Now it was fixed.
      (oaep_pad, oeap_unpad)
    - API document added.
  - crypto 1.1.9 to 1.1.10
    - KJUR.crypto.Cipher class added to encrypt/decrypt data.
      Currently only RSA, RSAOAEP supported. Other ciphers like
      AES, 3DES will be supported near in the future.
    - KJUR.crypto.MessageDigest class
      - HASHLENGTH, getCanonicalAlgName, getHashLength
  - asn1x509 1.0.15 to 1.0.16
    - AuthorityInfoAccess class added by @lionello 's pull request. Thanks.
  - base64x
    - fix API document
  - npm
    - missing exports of some global string converter were fixed

* Changes from 6.1.3 to 6.1.4 (2016-Oct-16)
  - base64x 1.1.7 to 1.1.8
    - function hextoArrayBuffer and ArrayBuffertohex added
    - some API documents added

* Changes from 6.1.2 to 6.1.3 (2016-Oct-15)
  - asn1csr 1.0.0 to 1.0.1
    - CSRUtil.getInfo method added to parse CSR
  - asn1ocsp
    - OCSPUtil.getOCSPResponseInfo API document added

* Changes from 6.1.1 to 6.1.2 (2016-Oct-08)
  - OCSP Response support
  - asn1hex 1.1.6 to 1.1.7
    - refactoring for static methods
    - encapsulated BitString support
    - more API documents
  - asn1ocsp 1.0.0 to 1.0.1
    - OCSPUtil.getOCSPResponseInfo added
  - merge RegExp fix pull request from @huokko.
    Thank you @huokko.
    (asn1x509, crypto, jws, keyutil, pkcs5pkey)

* Changes from 6.1.0 to 6.1.1 (2016-Sep-25)
  - asn1 1.0.10 to 1.0.11
    - encapsulated ASN.1 structure supported
      in DEROctetString and DERBitString.
    - API document update
  - tool_asn1encoder.html added

* Changes from 6.0.1 to 6.1.0 (2016-Sep-24)
  - asn1ocsp 1.0.0
    - now start to add OCSP protocol support
    - OCSP request ASN.1 classes are added
  - fix API document in x509 and asn1
  - test/qunit-do-{asn1,asn1ocsp}.html added or updated

* Changes from 6.0.0 to 6.0.1 (2016-Sep-12)
  - old jsrsasign.js is used in npm package. now fixed.

* Changes from 5.1.0 to 6.0.0 (2016-Sep-11)
  - As of so much request to remove Node functions
    in nodeutil.js, nodeutil.js have been removed from
    jsrsasign.js package. Then it is moved to
    new "jsrsasign-util" npm package.
    Now "jsrsasign" will be CommonJS, Purescript,
    Webpack and Browserify safe package.
    Some sample Node.js scripts in "sample_node"
    will be updated later.

* Changes from 5.0.15 to 5.1.0 (2016-Sep-07)
  - jwsjs 2.0.15 to 2.1.0
    - refactoring and API document update
    - addSignature, verifyAll, verifyNth method added
    - make addSignatureByHeaderKey, 
      addSignatureByHeaderPayloadKey and verifyWithCerts
      deprecated.
  - sample_*.html
    - review all to work. reference fix. make list in Wiki.
  - index*.html
    - update

* Changes from 5.0.14 to 5.0.15 (2016-Aug-26)
  - pemtojwk and jwktopkcs8 added to sample node scripts
  - asn1 1.0.9 to 1.0.10
    - ASN1Util.getPEMStringFromHex modified not to use
      CryptoJS.
  - test/qunit-do-*.html
    - test case reference fix
  - remove ext/{md5,ripemd160,sha1,sha256,sha512}.js,
    ext/THIRDPARTY_LICENSE.pjhash.txt for
    Paul Johnston's Hash Algorithm JavaScript

* Changes from 5.0.13 to 5.0.14
  - keyutil 1.0.12 to 1.0.13
    - KEYUTIL.getJWKFromKey() method added to get
      RFC 7517 JSON Web Key(JWK) object from RSAKey or
      KJUR.crypto.ECDSA public/private key object.
    - KEYUTIL.generateKeypair() 
      do also setPublicKeyHex for EC private key in
      as aligned to PEM private key
      loading.
    - KEYUTIL.getKey(JWK_EC_PRV)
      made change to set public x y too.
  - ecdsa-modified 1.0.4 to 1.0.5
    - getPublicKeyXYHex() method added
    - getShortNISTPCurveName() method added
  - npm
    - missed to export KJUR.lang now fixed
  - sample_node/genjwk added to generate keypair and save as JWK
  - tool_certview.html
    - loading script fix

* Changes from 5.0.12 to 5.0.13
  - base64x.js
    - KJUR.lang.String class added and its some static
      methods isHex, isInteger, isBase64, isBase64URL and
      isIntegerArray also defined.
    - KJUR.lang added to npm package namespace.
  - tool_string.html added to provide string converter tool.
  - jws.js
    API document updated.
  - CryptoJS codes in code.google.com seem to be removed and
    404 not found so that CryptoJS references in all test
    were moved to local files.
  - CryptoJS codes were moved to ext/cj directory.
  - tool_b64u{enc,dec}.html script URL fix

* Changes from 5.0.11 to 5.0.12
  - jws between 3.3.3 to 3.3.4
    - support grace period for verifyJWT method.
      This is to allow time difference between 
      JWT generator and verifier.
  - asn1hex
    - API document update

* Changes from 5.0.10 to 5.0.11
  - X509v1 certificate support in KEYUTIL.getKey and
    X509.getPublicKeyInfoPropOfCertPEM
  - sample_node/showcert added
  - x509.js 1.1.8 to 1.1.9
    - X509.DN_ATTRHEX added to show EV cert DN
    - X509v1 certificate support in X509.getPublicKeyInfoPropOfCertPEM.
      This makes KEYUTIL.getKey support X509v1 certificate.
  - test/qunit-do-x509-getinfo.html
    - test case added for EV cert DN
  - tool_{jwt,jwtveri}.html
    - fix typo. Thanks @ParkinT.
  - ext/{rsa,rsa2}.js
    - allow hash func to be passed to OAEP. Thanks @davedoesdev.
  - asn1x509.js 1.0.13 to 1.0.14
    - add 'SN' (i.e. SurName) support in distinguished name.
      Thanks @kurtsson.

* Changes from 5.0.9 to 5.0.10
  - sample_node/jwtverify bugfix
  - x509 1.1.7 to 1.1.8
    - following methods are added:
      - getInfo()
      - getExtSubjectKeyIdentifier()
      - getExtAuthorityKeyIdentifier()
      - getExtExtKeyUsageName()
      - getExtSubjectAltName()
      - getExtCRLDistributionPointsURI()

* Changes from 5.0.8 to 5.0.9 (2016-Apr-19)
  - ext/rng.js
    - use window.crypto.getRandomValues for SecureRandom
      if available. (ToDo also for Node.js)

* Changes from 5.0.7 to 5.0.8 (2016-Apr-14)
  - LICENSE.txt small update for years of copyright.
  - ext/x64-core*.js was missed and added
  - x509 1.1.6 to 1.1.7
    - X509.{getHexOfTLV_V3ExtValue,getHexOfV_V3ExtValue} 
      are chageed to return null instead of '' if there 
      is no extension specified by name or oid.
    - X509.getBasicConstraints added
    - X509.getSignatureAlgorithmName added
    - X509.getSignatureValueHex added
    - API document update
  - each *.min.js files are moved to min/ folder.
  - clean up old *-all-min.js

* Changes from 5.0.6 to 5.0.7 (2016-Mar-05)
  - tool_csr.html fix for subject parameter.
  - jsrsasign-latest-all-min wrong order in concatination.
    This raise wrong PKCS#5/8 encrypted PEM private key 
    generation in KEYUTIL.getPEM().
  - sample_node/asn1extract added

* Changes from 5.0.5 to 5.0.6 (2016-Feb-28)
  - bower.json name space fix
  - crypto-1.0 1.0.4 to 1.0.5
    - file removed
  - crypto-1.1 1.1.7 to 1.1.8
    - remove unnecessary evals for strict mode.

* Changes from 5.0.4 to 5.0.5
  - node sample 'jwssign', 'jwtverify', 'asn1dump'
    and 'pemtobin'  added.
  - base64x 1.1.5 to 1.1.6
    - license URL small fix
  - asn1 1.0.8 to 1.0.9
    - DERGeneralizedTime withMillis fix
    - DERGeneralizedTime and DERUTCTime refactoring
  - jws 3.3.2 to 3.3.3
    - JWS.parse method added
    - IntDate.getZulu UTCTime(YY) support added
  - jsrsasign-x.x.x-all-min.js move to lib directory from this version
  - jsrsasign-{1.2,1.2.1,1.3,1.3.1,2.0.0}.tgz are removed
    since they can get from github release/tags.

* Changes from 5.0.2 to 5.0.4 (2015-Nov-23)
  - jwtverify, asn1dump and pemtobin sample Node script in 
    sample_node directory. 
    There is a bower release but not in npm.

* Changes from 5.0.1 to 5.0.2 (2015-Nov-11)
  - jws 3.3.1 to 3.3.2
    - RFC 7638 getJWKthumbprint method added
  - base64x 1.1.5 to 1.1.6
    - function intarystrtohex added
  - nodeutil 1.0.0 newly added
    - utils for file I/O in Node.js
  - npm
    - add reference to intarystrtohex and CryptoJS

* Changes from 5.0.0 to 5.0.1 (2015-Oct-17)
  - keyutil 1.0.10 to 1.0.11
    - add support for bare RSA NED hexadecimal key in KEYUTIL.getKey

* Changes from 4.9.2 to 5.0.0 (2015-Oct-14)
  - *NOTICE* release 4.10.0 declined since API semver violation
  - some JWS HS* and Crypto Mac signature issue was fixed.
  - crypto 1.1.6 to 1.1.7
    - add support for various password providing method
      such as base64, base64url, hexadecimal or utf8 string
      for Mac.
  - jws 3.2.4 to 3.3.0
    - add support for various password providing method
      such as base64, base64url, hexadecimal or utf8 string
      for HS* JWS signing and validation
    - remove some old fashoned functions and methods
      which marked as "deprecated". Followings are removed:
      - JWS.generateJWSByP1PrvKey
      - JWS.generateJWSByKey
      - JWS.generateJWSByNED
      - JWS.verifyJWSByPemX509Cert
    - JWS.sign can handle header and payload
      JSON object not JSON string.
    - JWS.verify bugfix in 4.10.0 which only 
      accepts hexacedimal string key for HS*.
  - keyutil 1.0.10 to 1.0.11
    - add support for RSA private key without
      P/Q/DP/DQ/COEFF of JWK

* Changes from 4.9.1 to 4.9.2 (2015-Oct-02)
  - latest asn1x509 1.0.13 was missed in the latest-min.js and
    it was fixed.

* Changes from 4.9.0 to 4.9.1
  - asn1x509 1.0.12 t 1.0.13
    - setByObject method added to X500Name class
    - {C: "US", O: "test"} representation now can be used
      in newCertPEM method in X509Util class.

* Changes from 4.8.6 to 4.9.0
  - certificate signing request(CSR/PKCS#10) generation support
    asn1csr-1.0.js added
  - asn1 1.0.7 to 1.0.8
    - small API document update
  - base64x 1.1.4 to 1.1.5
    - function strdiffidx added
  - keyutil 1.0.9 to 1.0.10
    - fix and small program comment update
  - jws: small API document update

* Changes from 4.8.5 to 4.8.6
  - npm package and bower fix

* Changes from 4.8.4 to 4.8.5
  - some of small fix release for npm and jsrsasign-latest-all-min.
  - jwt 3.2.3 to 3.2.4
    - jws.js update for validation of jti confirming to RFC 7519
      as optional in verifyJWT method. Thanks @stephanbacheller.

* Changes from 4.8.3 to 4.8.4
  - some of small fix release for npm.

* Changes from 4.8.2 to 4.8.3
  - crypto 1.1.5 to 1.1.6
    - Signature.sign method fix in automatic detection of private key
  - asn1 1.0.6 to 1.0.7
    - ASN1Util.oidHexToInt() added
    - ASN1Util.oidIntToHex() added
  - asn1hex 1.1.5 to 1.1.6
    - ASN1HEX.dump() simple ASN.1 dump functionality added
    - ASN1HEX.isASN1HEX() added
  - tool_asn1dumper.html - Online ASN.1 dump tool added for demo
  - ** 4.8.3 updated files
    - ChangeLog.txt
    - asn1-1.0*.js
    - asn1hex-1.1*.js
    - crypto-1.1*.js
    - test/qunit-do-asn1-oidhex.html
    - test/qunit-do-asn1hex-dump.html

* Changes from 4.8.1 to 4.8.2
  - keyutil 1.0.8 to 1.0.9
    - getKey EC private/public key bug #69 fix
  - node npm module officially released at npmjs.com
  - ** 4.8.2 updated files
    - ChangeLog.txt
    - keyutil-1.0*.js

* Changes from 4.8.0 to 4.8.1
  - keyutil 1.0.7 to 1.0.8
    - RFC 7517 JSON Web Key(JWK) support 
      for RSA/ECC private/public key added in KEYUTIL.getKey method
  - ** 4.8.1 updated files
    - ChangeLog.txt
    - ecdsa-modified-1.0*.js (jsdoc fix)
    - keyutil-1.0*.js
    - base64x-1.1.js (b64utohex zero padding added)
    - test/qunit-do-base64x.html
    - test/qunit-do-keyutil-jwk.html
    - test/qunit-do-keyutil-pairpem.html

* Changes from 4.7.2 to 4.8.0 (2015-Jun-01)
  - Now jsjws JSON Web Signtaure library is merged into
    jsrsasign.
  - RFC 7519 JWT JSON Web Token full validation support.
  - jws 3.2.2 to 3.2.3
    - JWS.verifyJWT added to do full validation for JWT
    - JWS.inArray added
    - JWS.includedArray added
    - ChangeLogs for jws and jwsjs before jws 3.2.2
      please see ChangeLog_jws322.txt
  - asn1x509 1.0.11 to 1.0.12
    - subjectKeyIdentifier OID duplicate definition fix
  - JSON Web Token(JWT) full validation demo is available.
  - tool_jwt.html update to add 'aud' claim
  - ** 4.8.0 updated files
    - ChangeLog*.txt
    - jws-3.2.*
    - jwsjs-2.0.*
    - index_jws*.*
    - sample_jws*
    - tool_b64u*
    - tool_{jws,jwt}*.html
    - ext/json-sans-eval*.js
    - test/qunit-do-jws*.html

* Changes from 4.7.1 to 4.7.2 (2015-May-18)
  - x509 1.1.4 to 1.1.6
    - add some X.509v3 extension parsing methods.
      following methods are added:
      - getV3ExtInfoListOfCertHex
      - getV3ExtItemInfo_AtObj
      - getHexOfTLV_V3ExtValue
      - getHexOfV_V3ExtValue
      - getPosOfTLV_V3ExtValue
      - getExtKeyUsageBin
      - getExtKeyUsageString
      - getExtAIAInfo
  - asn1x509 1.0.10 to 1.0.11
    - OID.name2oidList updated for X.509v3 extension OIDs
    - OID.name2oid method added
    - OID.oid2name method added
  - ** 4.7.2 updated files **
    - ChangeLog.txt
    - asn1x509-1.0.js
    - test/qunit-do-x509-ext.html
    - test/qunit-do-asn1x509.html
    - x509-1.1
    - test/index.html
    - tool_httpscfg.html
    - ext/yahoo-min.js
    - ext/yahoo.js

* Changes from 4.7.0 to 4.7.1 (2015-May-14)
  - asn1x509 1.0.9 to 1.0.10
    - certissuer and certsubj supported in GeneralName class
  - x509 1.1.3 to 1.1.4
    - getPublicKeyInfoPosOfCertHEX added
  - tool_httpscfg.html added

* Changes from 4.6.0 to 4.7.0 (2014-Jul-07)
  - RFC 5126 CAdES format supported
    - CAdES-BES/EPES/T support in this version.
  - asn1cades (NEW)
  - asn1tsp 1.0.0 to 1.0.1
    - AbstractTSAAdapter, Fixed/SimpleTSAAdapter class added
  - asn1cms 1.0.1 to 1.0.2
    - SigningCertificate and SigningCertificateV2
      attributes are added.
    - IssuerAndSerialNumber class constructor now 
      supports PEM string of certificate.
    - properties dDigestAlgs and dCerts of SignedData object
      are added for object preservation.
    - CMSUtil.newSignedData now supports
      SigningCertificate/V2 attributes.
  - asn1
    - add DEREnumerate class
  - x509
    - fix for strict mode
  - crypto
    - fix for Signature.signHex/Str

* Changes from 4.5.0 to 4.6.0 (2014-May-25)
  - RFC 3161 Time Stamp Protocol generator is now supported.
  - asn1tsp 1.0.0 (NEW)
  - asn1 1.0.5 to 1.0.6
    - AbstractTime/GeneralizedTime: millisecond support
  - asn1cms 1.0.0 to 1.0.1
    - IssuerAndSerialNumber: setByCertPEM method added
    - SigningCertificate attribute added
    - SigningCertificate attributeV2 added
  - asn1x509 1.0.8 to 1.0.9
    - OID.oid2name added
    - X500Name
      - add certissuer, certsubject parameter support
  - base64x 1.1.2 to 1.1.3
    - function hextob64, hextob64nl, b64nltohex added
  - tool_tsreq.html for TimeStamp Request demo (NEW)
  - tool_tsres.html for making TimeStampToken demo (NEW)
  - tool_ca.html
    - fix signing key bug
    - support ExtKeyUsage

* Changes from 4.2.3 to 4.5.0 (2014-May-17)
  - RFC 5652 CMS SignedData generator is now supported.
  - asn1cms 1.0.0 (NEW)
  - asn1 1.0.4 to 1.0.5
    - unsorted DERSet is now supported for ASN.1 BER
    - DERUTCTime/GeneralizedTime provides current time
      if arguments is not specified.
  - asn1x509 1.0.8 to 1.0.9
    - x509.Time: automatic detection for UTC/Gen by length
    - OID: some oids are added.
  - keyutil 1.0.6 to 1.0.7
    - KEYUTIL.getHexFromPEM can omit sHead now.

* Changes from 4.2.2 to 4.2.3 (2014-May-14) minor update
  - keyutil 1.0.6
    - isPublic and isPrivate flag fix for generateKey method.
  - tool_ca.html
    - fix keyutil.js reference

* Changes from 4.2.1 to 4.2.2 (2014-Apr-19)
  - asn1x509 1.0.7 to 1.0.8
    - add setSignatureHex method for Certificate class
    - modify newCertPEM method to support to specify signature
      by value.
    - add AuthorityKeyIdentifier X.509v3 extension class
  - keyutil 1.0.4 to 1.0.5
    - PKCS#10 CSR support. Following methods are added:
      - KEYUTIL.getKeyFromCSRPEM
      - KEYUTIL.getKeyFromCSRHex
      - KEYUTIL.parseCSRHex
  - Tool:
    - tool_forfact.html:
      CSR to fake certificate converter for factorable.net
      key weakness check.
  - Test codes:
    - add test/qunit-do-keyutil-csr.html

* Changes from 4.2.0 to 4.2.1 (2013-Oct-11)
  - keyutil 1.0.3 to 1.0.4
    - new getPEM method for exporting keys
    - exporting PKCS#8 encrypted private key also supported.
    - DES-CBC support for PKCS#5 encrypted private key
    - additional DSA support
    - make old methods are marked as deprecated.

* Changes from 4.1.6 to 4.2.0 (2013-Oct-06)
  - DSA support added to most of classes.
  - now RSAKey/KJUR.crypto.{ECDSA,DSA} class has new properties
    isPrivate and isPublic
  - asn1x509 1.0.5 to 1.0.6
    - new X509Util.newCertPEM method is added to provate
      easy certificate issuance by JSON object.
    - DSA/ECDSA support added to Signature, TBSCertificate, 
      AlgorithmIdentifier and SubjectPublicKeyInfo classes
  - keyutil 1.0.2 to 1.0.3
    - provide support for DSA
      - getKey
      - getKeyFromPublicPKCS8Hex,parsePublicPKCS8Hex
  - x509 1.1.1 to 1.1.2
    - ECDSA,DSA support added in X509.getPublicKeyFromCertPEM
  - dsa-modified 1.0.0 to 1.0.1
    - method setPrivateKey, setPublicKey are changed to
      setPrivate and setPublic respectively to align RSA/ECDSA class.

* Changes from 4.1.5 to 4.1.6 (2013-Oct-02)
  - newly dsa-modified 1.0.0 added
    - This is a DSA algorithm ported from github.com/openpgpjs
    - However Signature and KEYUTIL doesn't support DSA yet.
  - asn1 1.0.3 to 1.0.4
    - ASN1Util.jsonToASN1HEX method added.
  - asn1hex 1.1.3 to 1.1.4
    - ASN1HEX.getVbyList with tag checking method added.
  - keyutil 1.0.1 to 1.0.2
    - fix typo in newEncryptedPKCS5PEM method.

* Changes from 4.1.4 to 4.1.5 (2013-Sep-29)
  - keyutil 1.0.0 to 1.0.1
    - new generateKeypair method added
    - fix getKey method
  - add LICENSE file for YUI.
  - name jsrsasign-4.1.4-all-min.js is the same but updated.

* Changes from 4.1.3 to 4.1.4 (2013-Sep-24)
  - ext/cryptojs-312-core-fix*.js added to fix HmacSHA224/384 issue.
    Please use 
      'https://kjur.github.io/jsrsasign/ext/cryptojs-312-core-fix.js' or 
      'https://kjur.github.io/jsrsasign/ext/cryptojs-312-core-fix-min.js' or 
      'https://kjur.github.io/jsrsasign/jsrsasign-4.1.4-all-min.js'
    instead of orignal 'core.js' of CryptoJS.

* Changes from 4.1.2 to 4.1.3 (2013-Sep-23)
  - keyutil 1.0.0
    - PKCS5PKEY class is moved to KEYUTIL class.
      PKCS5PKEY is now deprecated and backward compatibility purpose only.
    - KEYUTIL.getKey() method added to private more generic access to
      private and public keys.
  - asn1 1.0.3 to 1.0.4
    - ASN1Util.newObject method now supports more simple 
      representation of tagged object like:
      newObject({tag: ['a1', true, {seq: [{int: 3}, {int: 4}]}]});
  - ext/base64.js
      fix for "var v;" for strict

* Changes from 4.1.1 to 4.1.2 (2013-Sep-12)
  - asn1 1.0.2 to 1.0.3
    - new method ASN1Util.newObject added.
  - all in one script 'jsrsasign-4.1.2-all-min.js' added.

* Changes from 4.1.0 to 4.1.1 (2013-Aug-27)
  - crypto 1.1.3 to 1.1.4
    - add hmacmd5, hmacripemd160 support and test code
  - ecdsa-modified 1.0.2 to 1.0.3
    - new static method added
      - parseSigHex
      - parseSigHexInHexRS
      - asn1SigToConcatSig
      - concatSigToASN1Sig
      - hexRSSigToASN1Sig
      - biRSSigToASN1Sig
  - all QUnit test code is moved for latest QUnit 1.12

* Changes from 4.0.5 to 4.1.0 (2013-Aug-25)
  - crypto 1.1.2 to 1.1.3
    - RSAPSS(*withRSAandMGF1) support in Signature class
    - powerful init method to specify any type of key and
      certificate and automatic initialization.
    - KJUR.crypto.OID class added for OID and hex conversion
  - pkcs5pkey 1.0.4 to 1.0.5
    - to support for KJUR.crypto.ECDSA:
      - getKeyFromEncryptedPKCS8PEM, parsePlainPrivetePKCS8Hex,
        getKeyFromPublicPKCS8PEM, getKeyFromPublicPKCS8Hex,
        parsePublicRawRSAKeyHex, parsePrivateRawRSAKeyHexAtObj,
        parsePrivateRawECKeyHexAtObj and parsePublicPKCS8Hex
        method added.
  - rsasign 1.2.5 to 1.2.7
    - RSAPSS saltlen default was changed from -2 to -1
    - add API document description about PSS salt length.
    - signWithMessageHashPSS, verifyWithMessageHashPSS 
      method added.
  - ecdsa-modified 1.0.1 to 1.0.2
    - method setNamedCurve, setPrivateKeyHex, setPublicKeyHex added
    - sign/verifyWithMessageHash method added to align RSAKey class
  - x509 1.1.0 to 1.1.1
    - encapsulated as class
    - getPublicKeyInfoPropOfCertPEM method added.
  - asn1hex 1.1.1 to 1.1.2
    - encapsulated as class

* Changes from 4.0.4 to 4.0.5 (2013-Aug-16)
  - crypto 1.1.1 to 1.1.2
    - KJUR.crypto.Mac (message authentication code) class added

* Changes from 4.0.3 to 4.0.4 (2013-Jul-30)
  - rsasign 1.2.4 to 1.2.5
    - verifyStringPSS argument change from BigInteger object biSig 
      to hexadecimal string hSig
      
* Changes from 4.0.2 to 4.0.3 (2013-Jul-29)
  - crypto.js 1.1.0 to 1.1.1
    - Signature and MessageDigest class supports default provider.
      So no need to specify provider.
    - DEFAULTPROVIDER property
    - add Util.hashString, Util.hashHex functions
  - pkcs5pkey 1.0.3 to 1.0.4 
    - add getRSAKeyFromPublicPKCS8PEM
    - add getRSAKeyFromPublicPKCS8Hex
  - rsasign 1.2.3 to 1.2.4
    - delete _RSASIGN_HASHHEXFUNC property
    - now rsasign supports any hash algorithm
      which is supported by KJUR.crypto.Util.hashString
  - add some QUnit test code
    - test/qunit-do-{pkcs5-pub, rsasign-pss}.html 

* Changes from 4.0.1 to 4.0.2 (2013-Jul-23)
  - RSAPSS signing and validation fix by Dave(github.com/davedoesdev)
    (base64x,crypto,rsasign)

* Changes from 4.0.0 to 4.0.1
  - rsasign-1.2.js
    - small fix for PSS by Dave's contribution (github.com/davedoesdev)
    - However still having issue in PSS
  - NEW base64x-1.1.js 
    - moved from github.com/kjur/jsjws

* Changes from 3.1.5 and 4.0.0 (2013-Jul-18)
  - newly added ECC key and ECDSA support
    - MODIFY crypto-1.1.js - Signature class now supports ECDSA
    - NEW ecdsa-modified-1.0.js - modifed version of Bitcoin ecdsa.js
    - NEW ecparam-1.0.js - ECC curve parameters definition
    - NEW ext/ec.js - Tom Wu's EC library
    - NEW ext/ec-patch.js - patch to Tom Wu's EC library by Bitcoin
    - supported curves are secp{256r1,256k1,384r1}

* Changes from 3.1.4 and 3.1.5 (2013-Jun-11)
  - move third party library to ext directory.
  - fix script URLs in sample-rsasign.html 

* Changes from 3.1.3 and 3.1.4 (2013-May-31)
  - asn1-1.0.js update 1.0.1 to 1.0.2
    - method ASN1Util.getPEMStringFromHex added
  - asn1x509-1.0.js update 1.0.3 to 1.0.4
    - mehtod X509Util.getPKCS8PubKeyPEMfromRSAKey added

* Changes from 3.1.2 and 3.1.3 (2013-May-28)
  - crypto-1.0.js update 1.0.3 to 1.0.4
    - support "sjcl" (i.e. Stanford JavaScript Crypto Library) 
      provider with sha256 in MessageDigest class

* Changes from 3.1.1 and 3.1.2 (2013-May-27)
  - pkcs5pkey-1.0.js update 1.0.2 to 1.0.3
    - following method added to support loading encrypted PKCS#8 priavte key
      - getRSAKeyFromEncryptedPKCS8PEM
      - getPlainPKCS8HexFromEncryptedPKCS8PEM
      - getPBKDF2KeyHexFromParam
      - parseHexOfEncryptedPKCS8
      - getRSAKeyFromPlainPKCS8Hex

* Changes from 3.1.0 and 3.1.1
  - pkcs5pkey-1.0.js update 1.0.1 to 1.0.2
    - method 'getRSAKeyFromEncryptedPKCS5PEM', 'getEryptedPKCS5PEMFromPrvKeyHex'
      'getEryptedPKCS5PEMFromRSAKey' and 'newEncryptedPKCS5PEM'
      added to PKCS5PKEY to get encrypted PEM key.

* Changes from 3.0.5 and 3.1.0
  - asn1x509-1.0.js update 1.0.2 to 1.0.3
    CRL, TBSCertList and CRLEntry class added to KJUR.asn1.x509
    to issue CRL.

* Changes from 3.0.4 and 3.0.5
  - pkcs5peky-1.0 update 1.0.0 to 1.0.1
    method getRSAKeyFromPlainPKCS8PEM added to PKCS5PKEY class to load
    unencrypted PEM formatted PKCS#8 private key.

* Changes from 3.0.3 and 3.0.4
  - rsasign-1.2.js update 1.2.1 to 1.2.2
    - hash algs used were changed from  to MessageDigest(CryptoJS base). 
      So now jsrsasign doesn't use Paul Johnston's
      hash library(http://pajhome.org.uk/crypt/md5/md5.html).
      Paul's scripts will be concluded approx. one year for know then
      their scripts and LICENSE notice will be removed then.
  - crypto-1.0.js update 1.0.2 to 1.0.3
    - add static hash functions {md5,sha1,sha256,sha512,ripemd160} to KJUR.crypto.Util

* Changes from 3.0.2 and 3.0.3
  - asn1x509-1.0.js update to 1.0.1
    - ExtKeyUsage extension class added.

* Changes from 3.0.1 and 3.0.2
  - crypto-1.0.js update to 1.0.2
    - Signature now supports signature verification:
      - initVerifyByPublicKey and initVerifyByCertificatePEM method
        added.

* Changes from 3.0.0 and 3.0.1
  - crypto-1.0.js update to 1.0.1
    - MessageDigest class now support md5, sha224, sha256, sha384, 
      sha512 and ripemd160 of 'cryptojs' provider.
    - Signature class now support {MD5,SHA224,SHA256,SHA384,
      SHA512,RIPEMD160}withRSA of 'cryptojs/jsrsa' provider.
    - Signature class constructor now supports 
      'prvkeypem' parameter to specify signing private key.
  - asn1x509-1.0.js update to 1.0.1
    - Certificate.setRsaPrvKeyByPEMandPass(pem,pass) method added and
      supports new constructor property 'rsaprvpem' and 'rsaprvpas'.

* Changes from 2.0.0 and 3.0.0
  - New features:
    - crypto-1.0.js: MessageDigest and Signature class like Java JCE
    - asn1-1.0.js  : ASN.1 Primitive Encoder class
    - asn1x509-1.0.js: ASN.1 class for X.509 certificate
  - merge David Halls's contribution. 
    (https://github.com/davedoesdev, Thanks! Dave.)
    - rsa.js: update for PKCS#1 OAEP support
    - rsa2.js: update for PKCS#1 OAEP support
    - rsasign-1.2.js: add PSS support (1.2.1)
    - jsbn.js: small fix
    - jsbn2.js: update for probable prime fix, bnSquare
    - base64.js: small fix
  - gradually moving to CryptoJS library from other hash library

* Changes from 1.3.1 and 2.0.0 [Apr 14, 2013]0
  - newly added pkcs5pkey.js and PKCS5PKEY class to support 
    passcode encrypted PKCS#5 private key.

* Changes from 1.3 and 1.3.1 [Apr 14, 2013]
  - rsapem.js updated to 1.1 to 1.1.1
    - method RSAKey.readPrivateKeyFromASN1HexString added.

* Changes from 1.2.1 and 1.3 [May 10, 2012]
  - ASN1HEX class defined in asn1hex.js
  - update x509.js and rsapem.js for ASN1HEX class.
  - enhance ASN1HEX and X509class.
  - JavaScript API document is available.

* Changes from 1.2 and 1.2.1 [May 03, 2012]
  - now minified files also provided

* Changes from 1.1 and 1.2 [Apr 30, 2012]
  - fixed critial signature generation and verification bug related to
    zero padding of big integer.
  - add MD5, SHA512 and RIPEMD-160 support
  - default hash libraries were changed which was developed by
    Paul Johnston (See http://pajhome.org.uk/crypt/md5/md5.html).
  - now download site is hosted on github.

* Changes from 1.0 and 1.1 [Sep 25, 2010]
  - some web contents update

* 1.0 Initial Relasse [Jun 03, 2010]


