{
  "name": "grunt-requirejs-bundle",
  "description": "A Grunt plugin to bundle one or more AMD packages into a single define statement. This means you can just require the bundle and get all the packages loaded via requirejs.",
  "version": "0.0.8",
  "homepage": "https://github.com/cajones/grunt-requirejs-bundle",
  "author": {
    "name": "Chris Jones",
    "email": "chris.jones@spongeuk.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:cajones/grunt-requirejs-bundle.git"
  },
  "bugs": {
    "url": "https://github.com/cajones/grunt-requirejs-bundle/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/cajones/grunt-requirejs-bundle/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "requirejs",
    "amd",
    "bower",
    "component"
  ],
  "dependencies": {
    "lodash": "~2.3.0"
  },
  "readme": "# grunt-requirejs-bundle\r\n\r\n> A Grunt plugin to bundle one or more AMD packages into a single define statement. This means you can just require the bundle and get all the packages loaded via requirejs.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-requirejs-bundle --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-requirejs-bundle');\r\n```\r\n\r\n## The \"requirejs-bundle\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `requirejs-bundle` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  'requirejs-bundle': {\r\n    components: {\r\n      src: 'src/components/',\r\n      dest: 'tmp/components.js'   \r\n    },\r\n    extensions: {\r\n      src: 'src/extensions/',\r\n      dest: 'tmp/extensions.js'   \r\n    },\r\n  },\r\n})\r\n```\r\n\r\nThe `requirejs-bundle` task will enumerate all Bower packages (containing bower.json) in the provided src directory and build them into a single AMD statement.\r\n\r\n```js\r\ndefine([\"package1\", \"package2\", \"package3\" /*and so on*/])\r\n```\r\n\r\n#### Package Main File\r\nThe path to the main javascript file is identified by the 'main' property in each packages bower.json, if this is not present then index.js will be assumed.\r\n\r\n\r\n### Options\r\n\r\n#### options.baseUrl\r\nType: `String`\r\nDefault value: undefined\r\n\r\nPaths of source files globbed in the src parameter can be treated as relative to this path. \r\n\r\n#### options.moduleName\r\nType: `String`\r\nDefault value: `'.'`\r\n\r\nThe AMD call will be called with this as the first parameter.\r\n\r\n#### options.requireCall\r\nType: `String`\r\nDefault value: `'require'`\r\nPossible values: `'require'` or `'define'`\r\n\r\nThe requirejs-bundle task will emit either an AMD require statement or an AMD define.\r\nThe default is an AMD require.\r\n\r\n```js\r\ndefine(\"module-name\", [\"package1\", \"package2\", \"package3\" /*and so on*/])\r\n```\r\n\r\n#### Options Example\r\nIn this example, custom options are used bundle all the packages in the components directory into a single AMD module called 'my-components', the module is going to be compiled by [requirejs](http://requirejs.org/) with the baseUrl set to 'src', so we also set the 'requirejs-bundle' baseUrl to make the paths the same.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  requirejs_bundle: {\r\n    src: 'src/components/',\r\n    dest: 'tmp/my-components.js'\r\n    options: {\r\n      moduleName: 'my-components',\r\n      baseUrl: 'src'\r\n    }\r\n  },\r\n})\r\n```\r\n\r\nAssuming we have a two bower packages (package1 and package2) in the components directory, the resulting AMD module will look like this:-\r\n\r\n```js\r\ndefine(\"my-components\", [\"components/package1/index\", \"components/package1/index\"]);\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n* 0.0.8 - Fixed a bug that added the module name to require() calls\r\n* 0.0.7 - Added support for requireCall option\r\n* 0.0.6 - expand the full package name\r\n* 0.0.5 \r\n* 0.0.4 \r\n* 0.0.3 \r\n* 0.0.2 \r\n* 0.0.1 \r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-requirejs-bundle@0.0.8",
  "dist": {
    "shasum": "4bde360b21e3293b71a30221730e7458ed60cfcb"
  },
  "_from": "grunt-requirejs-bundle@",
  "_resolved": "https://registry.npmjs.org/grunt-requirejs-bundle/-/grunt-requirejs-bundle-0.0.8.tgz"
}
